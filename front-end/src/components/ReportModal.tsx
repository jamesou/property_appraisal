import React, { useState } from 'react';
import { jsPDF } from 'jspdf';

interface ReportOptions {
  salesMethod: string;
  advertisement: string;
  targetBuyer: string;
}

interface ValuationResult {
  address: {
    address_id: string;
    full_address: string;
    town_city: string;
    suburb_locality: string;
    territorial_authority: string;
  };
  valuation: {
    capital_value: string;
    improvements_value: string;
    land_value: string;
    building_total_floor_area: string;
    improvements_description: string;
  };
}

interface ReportModalProps {
  onClose: () => void;
  valuationResult: ValuationResult;
}

const ReportModal: React.FC<ReportModalProps> = ({ onClose, valuationResult }) => {
  const [currentStep, setCurrentStep] = useState(1);
  const [showPreview, setShowPreview] = useState(false);
  const [reportOptions, setReportOptions] = useState<ReportOptions>({
    salesMethod: '',
    advertisement: '',
    targetBuyer: '',
  });

  const handleReportOptionChange = (name: keyof ReportOptions, value: string) => {
    setReportOptions(prev => ({ ...prev, [name]: value }));
  };

  const handleNextStep = () => {
    if (currentStep < 3) {
      setCurrentStep(prev => prev + 1);
    } else {
      setShowPreview(true);
    }
  };

  const handlePrevStep = () => {
    if (currentStep > 1) {
      setCurrentStep(prev => prev - 1);
    }
  };

  const generatePDF = () => {
    const doc = new jsPDF();
    const pageWidth = doc.internal.pageSize.getWidth();
    let yPosition = 20;

    // Title
    doc.setFontSize(20);
    doc.text('Property Valuation Report', pageWidth / 2, yPosition, { align: 'center' });
    yPosition += 20;

    // Property Details
    doc.setFontSize(16);
    doc.text('Property Details', 20, yPosition);
    yPosition += 10;

    doc.setFontSize(12);
    doc.text(`Address: ${valuationResult.address.full_address}`, 20, yPosition);
    yPosition += 8;
    doc.text(`Area: ${valuationResult.address.suburb_locality}, ${valuationResult.address.town_city}`, 20, yPosition);
    yPosition += 8;
    doc.text(`Territory: ${valuationResult.address.territorial_authority}`, 20, yPosition);
    yPosition += 8;
    doc.text(`Building Floor Area: ${valuationResult.valuation.building_total_floor_area} mÂ²`, 20, yPosition);
    yPosition += 15;

    // Valuation Details
    doc.setFontSize(16);
    doc.text('Valuation Details', 20, yPosition);
    yPosition += 10;

    doc.setFontSize(12);
    doc.text(`Estimated Value: $${parseInt(valuationResult.valuation.capital_value).toLocaleString()}`, 20, yPosition);
    yPosition += 8;
    doc.text(`Land Value: $${parseInt(valuationResult.valuation.land_value).toLocaleString()}`, 20, yPosition);
    yPosition += 8;
    doc.text(`Improvements Value: $${parseInt(valuationResult.valuation.improvements_value).toLocaleString()}`, 20, yPosition);
    yPosition += 15;

    // Selected Options
    doc.setFontSize(16);
    doc.text('Marketing Strategy', 20, yPosition);
    yPosition += 10;

    doc.setFontSize(12);
    doc.text(`Sales Method: ${reportOptions.salesMethod}`, 20, yPosition);
    yPosition += 8;
    doc.text(`Advertisement Package: ${reportOptions.advertisement}`, 20, yPosition);
    yPosition += 8;
    doc.text(`Target Buyer Group: ${reportOptions.targetBuyer}`, 20, yPosition);

    // Add footer
    const footer = 'Generated by NZ Property Appraisal';
    doc.setFontSize(10);
    doc.text(footer, pageWidth / 2, doc.internal.pageSize.getHeight() - 10, { align: 'center' });

    // Save the PDF
    doc.save('property-valuation-report.pdf');
  };

  return (
    <div className="modal-overlay">
      <div className="modal-content">
        <button className="close-modal" onClick={onClose}>&times;</button>
        
        {!showPreview ? (
          <div className="report-options">
            <h2>Generate Comprehensive Report</h2>
            <div className="step-indicator">
              <div className={`step ${currentStep >= 1 ? 'active' : ''}`}>1</div>
              <div className={`step ${currentStep >= 2 ? 'active' : ''}`}>2</div>
              <div className={`step ${currentStep >= 3 ? 'active' : ''}`}>3</div>
            </div>

            {currentStep === 1 && (
              <div className="step-content">
                <h3>Select Sales Method</h3>
                <div className="option-group">
                  <label>
                    <input
                      type="radio"
                      name="salesMethod"
                      value="auction"
                      checked={reportOptions.salesMethod === 'auction'}
                      onChange={(e) => handleReportOptionChange('salesMethod', e.target.value)}
                    />
                    Auction
                  </label>
                  <label>
                    <input
                      type="radio"
                      name="salesMethod"
                      value="negotiation"
                      checked={reportOptions.salesMethod === 'negotiation'}
                      onChange={(e) => handleReportOptionChange('salesMethod', e.target.value)}
                    />
                    Negotiation
                  </label>
                  <label>
                    <input
                      type="radio"
                      name="salesMethod"
                      value="tender"
                      checked={reportOptions.salesMethod === 'tender'}
                      onChange={(e) => handleReportOptionChange('salesMethod', e.target.value)}
                    />
                    Tender
                  </label>
                </div>
              </div>
            )}

            {currentStep === 2 && (
              <div className="step-content">
                <h3>Advertisement Preferences</h3>
                <div className="option-group">
                  <label>
                    <input
                      type="radio"
                      name="advertisement"
                      value="premium"
                      checked={reportOptions.advertisement === 'premium'}
                      onChange={(e) => handleReportOptionChange('advertisement', e.target.value)}
                    />
                    Premium Package
                  </label>
                  <label>
                    <input
                      type="radio"
                      name="advertisement"
                      value="standard"
                      checked={reportOptions.advertisement === 'standard'}
                      onChange={(e) => handleReportOptionChange('advertisement', e.target.value)}
                    />
                    Standard Package
                  </label>
                  <label>
                    <input
                      type="radio"
                      name="advertisement"
                      value="basic"
                      checked={reportOptions.advertisement === 'basic'}
                      onChange={(e) => handleReportOptionChange('advertisement', e.target.value)}
                    />
                    Basic Package
                  </label>
                </div>
              </div>
            )}

            {currentStep === 3 && (
              <div className="step-content">
                <h3>Target Buyer Group</h3>
                <div className="option-group">
                  <label>
                    <input
                      type="radio"
                      name="targetBuyer"
                      value="firstHome"
                      checked={reportOptions.targetBuyer === 'firstHome'}
                      onChange={(e) => handleReportOptionChange('targetBuyer', e.target.value)}
                    />
                    First Home Buyers
                  </label>
                  <label>
                    <input
                      type="radio"
                      name="targetBuyer"
                      value="investors"
                      checked={reportOptions.targetBuyer === 'investors'}
                      onChange={(e) => handleReportOptionChange('targetBuyer', e.target.value)}
                    />
                    Property Investors
                  </label>
                  <label>
                    <input
                      type="radio"
                      name="targetBuyer"
                      value="families"
                      checked={reportOptions.targetBuyer === 'families'}
                      onChange={(e) => handleReportOptionChange('targetBuyer', e.target.value)}
                    />
                    Growing Families
                  </label>
                </div>
              </div>
            )}

            <div className="modal-actions">
              {currentStep > 1 && (
                <button onClick={handlePrevStep} className="secondary-button">
                  Previous
                </button>
              )}
              <button
                onClick={handleNextStep}
                className="primary-button"
                disabled={
                  (currentStep === 1 && !reportOptions.salesMethod) ||
                  (currentStep === 2 && !reportOptions.advertisement) ||
                  (currentStep === 3 && !reportOptions.targetBuyer)
                }
              >
                {currentStep === 3 ? 'Preview Report' : 'Next'}
              </button>
            </div>
          </div>
        ) : (
          <div className="report-preview">
            <h2>Report Preview</h2>
            <div className="preview-content">
              <h3>Selected Options</h3>
              <p><strong>Sales Method:</strong> {reportOptions.salesMethod}</p>
              <p><strong>Advertisement Package:</strong> {reportOptions.advertisement}</p>
              <p><strong>Target Buyer Group:</strong> {reportOptions.targetBuyer}</p>
              
              <h3>Property Details</h3>
              <p><strong>Address:</strong> {valuationResult.address.full_address}</p>
              <p><strong>Estimated Value:</strong> ${parseInt(valuationResult.valuation.capital_value).toLocaleString()}</p>
            </div>
            <div className="modal-actions">
              <button onClick={() => setShowPreview(false)} className="secondary-button">
                Back to Options
              </button>
              <button onClick={generatePDF} className="primary-button">
                Download PDF
              </button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default ReportModal;
